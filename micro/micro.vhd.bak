library ieee;
use ieee.std_logic_1164.all;

entity micro is
	port
	(
		clk		   : in	std_logic;
		reset	      : in	std_logic;
		
		outGenerico1: out std_logic_vector(15 downto 0);
		outGenerico2: out std_logic;
		outGenerico3: out std_logic_vector(1 downto 0);
		
		RI1_inC     : in std_logic_vector(7 downto 0);
		RI2_inC     : in std_logic_vector(7 downto 0);	
		RO1_outC    : out std_logic_vector(7 downto 0);
		RO2_outC    : out std_logic_vector(7 downto 0)
	);

end entity;

architecture arq_micro of micro is


	signal instruction :  std_logic_vector(15 downto 0);
	signal MD_rwC, PC_ldC, PC_clrC, PC_fC, IR_ldC, IR_clrC, RO1_ldC, RO2_ldC, RI1_ldC, flg_ldC, RI2_ldC, R3_ldC, R1_ldC, R2_ldC: std_logic;
	signal flag_outC, Mux_1sC, Mux_2sC, Mux_3sC: std_logic_vector(1 downto 0);
	signal ALU_sC: std_logic_vector(3 downto 0);
	signal CompOutExtC: std_logic_vector(7 downto 0);

	component Datapath is
			port( MD_rw  : in std_logic;
					clk	 : in std_logic;
					PC_ld	 : in std_logic;
					PC_clr : in std_logic;
					PC_f	 : in std_logic;
					IR_ld	 : in std_logic;
					IR_clr : in std_logic;
					RI1_in  : in std_logic_vector(7 downto 0);
					RI2_in  : in std_logic_vector(7 downto 0);	
					RO1_out: out std_logic_vector(7 downto 0);
					RO2_out: out std_logic_vector(7 downto 0);
					RO1_ld : in std_logic;
					RO2_ld : in std_logic;
					RI1_ld : in std_logic;
					RI2_ld : in std_logic;
					R3_ld  : in std_logic;
					R1_ld : in std_logic;
					R2_ld : in std_logic;
					Mux_1s : in std_logic_vector(1 downto 0);
					Mux_2s : in std_logic_vector(1 downto 0);
					Mux_3s : in std_logic_vector(1 downto 0);
					ALU_s  : in std_logic_vector(3 downto 0);
					flg_ld : in std_logic;
					flag_out  : out std_logic_vector(1 downto 0);
					Inst 	    : buffer std_logic_vector(15 downto 0);
					CompOutExt: out std_logic_vector(7 downto 0));
	end component;

	component Control is port
	(
		clk		   : in	std_logic;
		reset	      : in	std_logic;
		instruction : in  std_logic_vector(15 downto 0);
		MD_rwC, PC_ldC, PC_clrC, PC_fC, IR_ldC, IR_clrC, RO1_ldC, RO2_ldC, RI1_ldC, flg_ldC, RI2_ldC, R3_ldC, R1_ldC, R2_ldC: out std_logic;
		flag_outC, Mux_1sC, Mux_2sC, Mux_3sC: out std_logic_vector(1 downto 0);
		ALU_sC		: out std_logic_vector(3 downto 0);
		CompOutExtC : in std_logic_vector(7 downto 0)
	);
	end component;
	
	
	Cont: Control port map(clk, reset, instruction, MD_rwC, PC_ldC, PC_clrC, PC_fC, IR_ldC, IR_clrC,  RO1_ldC, 
								 RO2_ldC, RI1_ldC, RI2_ldC, R3_ldC, R1_ldC, R2_ldC, flag_outC, Mux_1sC, Mux_2sC, Mux_3sC, ALU_sC, Mux_1sC, Mux_2sC, Mux_3sC, ALU_sC);
	DP: datapath port map(MD_rwC, clk, PC_ldC, PC_clrC, PC_fC, IR_ldC, IR_clrC, RI1_inC, RI2_inC, RO1_outC, RO2_outC, RO1_ldC, 
								 RO2_ldC, RI1_ldC, RI2_ldC, R3_ldC, R1_ldC, R2_ldC, Mux_1sC, Mux_2sC, Mux_3sC, ALU_sC, flg_ldC, flag_outC, instruction, CompOutExtC); 
		
end arq_micro